{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/chat.service.ts","./src/app/chats/chat-card/chat-card.component.ts","./src/app/chats/chat-card/chat-card.component.html","./src/app/chats/chats.component.ts","./src/app/chats/chats.component.html","./src/app/messages/message-card/message-card.component.ts","./src/app/messages/message-card/message-card.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/messaging.service.ts","./src/app/user-info.service.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { MessagingService } from './messaging.service';\nimport { UserInfoService } from './user-info.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  currentConversation;\n  currentUser;\n  constructor(\n    private messagingService: MessagingService,\n    private userInfoService: UserInfoService\n  ) {}\n\n  public setCurrentUser() {\n    this.messagingService.getConversation(this.currentUser);\n    this.userInfoService.setCurrentLogInUser(this.currentUser);\n  }\n}\n","<body>\n  <div class=\"messenger-container\">\n    <mat-toolbar color=\"primary\">\n      <button\n        mat-icon-button\n        class=\"example-icon\"\n        aria-label=\"Example icon-button with menu icon\"\n      >\n        <mat-icon>menu</mat-icon>\n      </button>\n      <span>Messenger - TradeBRICS</span>\n      <span class=\"example-spacer\"></span>\n      <mat-form-field class=\"example-full-width\">\n        <input matInput value=\"User-ID\" [(ngModel)]=\"currentUser\" />\n      </mat-form-field>\n      <button\n        mat-icon-button\n        class=\"example-icon favorite-icon\"\n        aria-label=\"Example icon-button with heart icon\"\n        (click)=\"setCurrentUser()\"\n      >\n        <mat-icon>login</mat-icon>\n      </button>\n    </mat-toolbar>\n    <div class=\"conversations\">\n      <app-chats [currentUser]=\"currentUser\"> </app-chats>\n    </div>\n    <div class=\"messages\">\n      <app-messages\n        [currentConversation]=\"currentConversation\"\n        [currentUser]=\"this.currentUser\"\n      >\n      </app-messages>\n    </div>\n    <div class=\"chatbox\">\n      <div class=\"chatinput\">\n        <mat-form-field class=\"input\">\n          <input matInput placeholder=\"Message...\" />\n        </mat-form-field>\n        <a>&nbsp;&nbsp;&nbsp;</a>\n        <button mat-raised-button color=\"primary\">Send</button>\n      </div>\n    </div>\n  </div>\n</body>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { ChatsComponent } from './chats/chats.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { ChatCardComponent } from './chats/chat-card/chat-card.component';\nimport { MessageCardComponent } from './messages/message-card/message-card.component';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nimport { FormsModule } from '@angular/forms';\n\nconst config: SocketIoConfig = { url: 'http://127.0.0.1:3000/', options: {} };\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatsComponent,\n    MessagesComponent,\n    ChatCardComponent,\n    MessageCardComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    SocketIoModule.forRoot(config),\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { AppModel } from './app.model';\nimport { MessagingService } from './messaging.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChatService {\n  constructor(\n    public socket: Socket,\n    private messagingService: MessagingService\n  ) {}\n\n  public sendChat(message: AppModel) {\n    this.socket.emit('message', message);\n  }\n\n  public receiveChat() {\n    return this.socket.fromEvent('broadcast');\n  }\n\n  public getClients() {\n    return this.socket.fromEvent('clients');\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MessagingService } from '../../messaging.service';\nimport { UserInfoService } from '../../user-info.service';\n\n@Component({\n  selector: 'app-chat-card',\n  templateUrl: './chat-card.component.html',\n  styleUrls: ['./chat-card.component.css'],\n})\nexport class ChatCardComponent implements OnInit {\n  name: string;\n  @Input() lastMessage: string;\n  @Input() photoURL: string;\n  @Input() users: [];\n  @Input() isGroupChat: boolean;\n  @Input() currentUser: string;\n  constructor(\n    private messagingService: MessagingService,\n    public userInfoService: UserInfoService\n  ) {}\n\n  ngOnInit(): void {\n    if (!this.isGroupChat) {\n      this.users.forEach((val) => {\n        if (val !== this.currentUser) {\n          this.messagingService.getUsers(val).subscribe((conversationUser) => {\n            this.name = conversationUser[0].displayName;\n            this.photoURL = conversationUser[0].photoURL;\n          });\n        }\n      });\n    }\n  }\n}\n","<div class=\"left\">\n  <img [src]=\"photoURL\" alt=\"profile_image\" class=\"photo\" />\n</div>\n<div class=\"right\">\n  <a class=\"text\"\n    ><strong>{{ name }}</strong></a\n  ><a class=\"text\">{{ lastMessage }}</a>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MessagingService } from '../messaging.service';\nimport { UserInfoService } from '../user-info.service';\nimport { ChatService } from '../chat.service';\n\n@Component({\n  selector: 'app-chats',\n  templateUrl: './chats.component.html',\n  styleUrls: ['./chats.component.css'],\n})\nexport class ChatsComponent implements OnInit {\n  @Input() currentUser;\n  conversations;\n  constructor(\n    private messagingService: MessagingService,\n    private userInfoService: UserInfoService,\n    private chatService: ChatService\n  )\n  {\n    messagingService.currentConversationSubject.subscribe((value) => {\n      this.conversations = value;\n    });\n  }\n\n  public setConversation(conversationID, otherUserID) {\n    this.messagingService.setCurrentChat(conversationID);\n    otherUserID.forEach((value) => {\n      if (value !== this.currentUser) {\n        this.userInfoService.setOtherLogInUser(value);\n      }\n    });\n  }\n\n  ngOnInit(): void {}\n}\n","<mat-toolbar><span>Conversations</span></mat-toolbar>\n<mat-selection-list #chat [multiple]=\"false\" (click)=\"setConversation(chat.selectedOptions.selected[0]?.value._id,chat.selectedOptions.selected[0]?.value.participants)\">\n  <mat-list-option *ngFor=\"let conversation of conversations\" [value]=\"conversation\">\n    <app-chat-card\n      [currentUser]=currentUser\n      [lastMessage]= conversation.lastSentMessage\n      [isGroupChat]=conversation.isGroupChat\n      [users]=conversation.participants\n    >\n    </app-chat-card>\n    <mat-divider></mat-divider>\n  </mat-list-option>\n</mat-selection-list>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-message-card',\n  templateUrl: './message-card.component.html',\n  styleUrls: ['./message-card.component.css'],\n})\nexport class MessageCardComponent implements OnInit {\n  @Input() ownProfileURL: string;\n  @Input() ownDisplayName: string;\n  @Input() otherDisplayName: string;\n  @Input() otherProfileURL: string;\n  @Input() message: string;\n  @Input() currentUser: string;\n  @Input() senderUserID: string;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  getTimeStamp() {\n    const date = new Date(Date.now());\n    const dateStr =\n      ('00' + (date.getMonth() + 1)).slice(-2) +\n      '/' +\n      ('00' + date.getDate()).slice(-2) +\n      '/' +\n      date.getFullYear() +\n      ' ' +\n      ('00' + date.getHours()).slice(-2) +\n      ':' +\n      ('00' + date.getMinutes()).slice(-2);\n    return dateStr;\n  }\n}\n","<div *ngIf=\"currentUser != senderUserID\" class=\"container\">\n  <img [src]=\"otherProfileURL\" alt=\"Avatar\" style=\"width: 100%;\" />\n  <p>{{ otherDisplayName }}</p>\n  <p>{{ message }}</p>\n  <span class=\"time-right\">{{ getTimeStamp() }}</span>\n</div>\n\n<div *ngIf=\"currentUser === senderUserID\" class=\"container darker\">\n  <img [src]=\"ownProfileURL\" alt=\"Avatar\" class=\"right\" style=\"width: 100%;\" />\n  <p>{{ ownDisplayName }}</p>\n  <p>{{ message }}</p>\n  <span class=\"time-left\">{{ getTimeStamp() }}</span>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { AppModel } from '../app.model';\nimport { ChatService } from '../chat.service';\nimport { MessagingService } from '../messaging.service';\nimport { UserInfoService } from '../user-info.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css'],\n})\nexport class MessagesComponent implements OnInit {\n  @Input() currentConversation: string;\n  @Input() currentUser: string;\n  @Input() ownDisplayName: string;\n  @Input() ownProfileURL: string;\n  name = 'Anonymous';\n  newMessage: string;\n  tempMessageList: [];\n  messageList: AppModel[];\n  clientsAmount;\n\n  constructor(\n    private chatService: ChatService,\n    private messagingService: MessagingService,\n    public userInfoService: UserInfoService\n  ) {\n    this.messagingService.currentChatObservable.subscribe((value) => {\n      this.messagingService.getMessages(value);\n    });\n    this.messagingService.messagesObservable.subscribe((value) => {\n      this.tempMessageList = value;\n    });\n    this.getCurrentUserInfo();\n  }\n\n  public getCurrentUserInfo() {\n    this.userInfoService.currentChatUserObservable.subscribe((value) => {\n      console.log(value);\n    });\n  }\n\n  sendMessage() {\n    this.chatService.sendChat({\n      name: this.name,\n      message: this.newMessage,\n      processed: null,\n      sent: Date.now(),\n      arrived: null,\n      socketId: null,\n    });\n    this.newMessage = '';\n  }\n  public getMilliseconds(val: number): string {\n    return `${new Date(val).getHours()}:${new Date(\n      val\n    ).getMinutes()}:${new Date(val).getSeconds()}.${new Date(\n      val\n    ).getMilliseconds()}`;\n  }\n\n  ngOnInit() {\n    this.chatService.receiveChat().subscribe((message: AppModel) => {\n      this.messageList.push({\n        ...message,\n        arrived: Date.now(),\n      });\n      console.log(message);\n    });\n    this.chatService.getClients().subscribe((clients) => {\n      this.clientsAmount = clients;\n    });\n  }\n}\n","<mat-toolbar\n  ><span>{{ this.userInfoService.otherUserDisplayName }}</span></mat-toolbar\n>\n<div class=\"message\">\n  <div *ngFor=\"let message of tempMessageList\">\n    <app-message-card\n      [ownProfileURL]=\"this.userInfoService.currentUserProfilePicture\"\n      [ownDisplayName]=\"this.userInfoService.currentUserDisplayName\"\n      [otherDisplayName]=\"this.userInfoService.otherUserDisplayName\"\n      [otherProfileURL]=\"this.userInfoService.otherUserProfilePicture\"\n      [message]=\"message.message\"\n      [currentUser]=\"currentUser\"\n      [senderUserID]=\"message.userID\"\n    >\n    </app-message-card>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessagingService {\n  public messagesSubject = new BehaviorSubject([]);\n  public messagesObservable = new Observable<any>();\n  public currentChatSubject = new BehaviorSubject({});\n  public currentChatObservable = new Observable<any>();\n  public currentConversationSubject = new BehaviorSubject([]);\n  public currentConversationObservable = new Observable<any>();\n  public currentChats;\n  constructor(private http: HttpClient) {\n    this.messagesObservable = this.messagesSubject.asObservable();\n    this.currentChatObservable = this.currentChatSubject.asObservable();\n    this.currentConversationObservable = this.currentConversationSubject.asObservable();\n  }\n\n  public setCurrentChat(currentUser) {\n    this.currentChatSubject.next(currentUser);\n  }\n  public setMessages(messages) {\n    this.messagesSubject.next(messages);\n  }\n  public setConversations(conversations) {\n    this.currentConversationSubject.next(conversations);\n  }\n\n  public getConversation(user: string) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http\n      .post(\n        'http://127.0.0.1:3000/conversations/get',\n        JSON.stringify({ userID: user }),\n        httpOptions\n      )\n      .subscribe((value) => {\n        this.setConversations(value);\n        this.currentChats = value;\n        return value;\n      });\n  }\n  public getMessages(conversationID: string) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http\n      .post(\n        'http://127.0.0.1:3000/messages/get',\n        JSON.stringify({ conversationID }),\n        httpOptions\n      )\n      .subscribe((value) => {\n        this.setMessages(value);\n        return value;\n      });\n  }\n  public getUsers(user: string) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http.post(\n      'http://127.0.0.1:3000/users/get',\n      JSON.stringify({ userID: user }),\n      httpOptions\n    );\n  }\n}\n","import { Injectable, Input } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserInfoService {\n  currentUserDisplayName: string;\n  currentUserProfilePicture: string;\n  otherUserDisplayName: string;\n  otherUserProfilePicture: string;\n\n  public currentLogInUserSubject = new BehaviorSubject([]);\n  public currentLogInUserObservable = new Observable<any>();\n  public currentChatUserSubject = new BehaviorSubject([]);\n  public currentChatUserObservable = new Observable<any>();\n\n  constructor(private http: HttpClient) {\n    this.currentLogInUserObservable = this.currentLogInUserSubject.asObservable();\n    this.currentChatUserObservable = this.currentChatUserSubject.asObservable();\n  }\n\n  public setCurrentLogInUser(userID: string) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http\n      .post(\n        'http://127.0.0.1:3000/users/get',\n        JSON.stringify({ userID }),\n        httpOptions\n      )\n      .subscribe((value) => {\n        this.currentUserDisplayName = value[0].displayName;\n        this.currentUserProfilePicture = value[0].photoURL;\n        return value;\n      });\n  }\n\n  public setOtherLogInUser(userID: string) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http\n      .post(\n        'http://127.0.0.1:3000/users/get',\n        JSON.stringify({ userID }),\n        httpOptions\n      )\n      .subscribe((value) => {\n        this.otherUserDisplayName = value[0].displayName;\n        this.otherUserProfilePicture = value[0].photoURL;\n        return value;\n      });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}